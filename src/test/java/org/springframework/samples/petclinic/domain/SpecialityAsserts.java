package org.springframework.samples.petclinic.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpecialityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialityAllPropertiesEquals(Speciality expected, Speciality actual) {
        assertSpecialityAutoGeneratedPropertiesEquals(expected, actual);
        assertSpecialityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialityAllUpdatablePropertiesEquals(Speciality expected, Speciality actual) {
        assertSpecialityUpdatableFieldsEquals(expected, actual);
        assertSpecialityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialityAutoGeneratedPropertiesEquals(Speciality expected, Speciality actual) {
        assertThat(expected)
            .as("Verify Speciality auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialityUpdatableFieldsEquals(Speciality expected, Speciality actual) {
        assertThat(expected)
            .as("Verify Speciality relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialityUpdatableRelationshipsEquals(Speciality expected, Speciality actual) {
        assertThat(expected)
            .as("Verify Speciality relationships")
            .satisfies(e -> assertThat(e.getVets()).as("check vets").isEqualTo(actual.getVets()));
    }
}
